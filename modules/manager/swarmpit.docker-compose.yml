version: '3.8'

services:
  agent:
    image: swarmpit/agent:2.2
    environment:
      DOCKER_API_VERSION: '1.35'
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
     - net
    logging:
      driver: json-file
    deploy:
      mode: global
      labels:
        swarmpit.agent: 'true'
      resources:
        reservations:
          cpus: '0.05'
          memory: 32M
        limits:
          cpus: '0.1'
          memory: 500M
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 5
        window: 120s

  exporter:
    image: ghcr.io/itarutran/swarm-exporter:v1
    build:
      context: ../../swarm-exporter
      dockerfile: ./Dockerfile
    # ports:
    #   - 9988:3000
    networks:
      - net
    env_file:
      - ../../swarm-exporter/.env
    environment:
      API_ENDPOINT: http://manager_app:8080
    # healthcheck:
    #   test: wget http://localhost:3000/health
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 2s
        order: start-first
        failure_action: rollback
        monitor: 5s
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 5
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
        reservations:
          cpus: '0.01'
          memory: 50M

  app:
    image: swarmpit/swarmpit:1.9
    environment:
      SWARMPIT_DB: http://db:5984
      SWARMPIT_INFLUXDB: http://influxdb:8086
    # ports:
    #  - 888:8080
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
     - net
    logging:
      driver: json-file
    healthcheck:
      test: curl -s --fail http://localhost:8080 > /dev/null
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      placement:
        constraints:
          - node.role == manager
      resources:
        reservations:
          cpus: '0.1'
          memory: 512M
        limits:
          cpus: '1.0'
          memory: 1024M
      restart_policy:
        condition: any
        delay: 2s
        max_attempts: 5
        window: 120s

  db:
    image: couchdb:2.3.0
    volumes:
     - db-data:/opt/couchdb/data
    networks:
     - net
    logging:
      driver: json-file
    deploy:
      # placement:
      #   constraints:
      #     - node.labels.name==db
      resources:
        reservations:
          cpus: '0.1'
          memory: 128M
        limits:
          cpus: '0.3'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 5
        window: 120s

  influxdb:
    image: influxdb:1.7
    volumes:
     - influx-data:/var/lib/influxdb
    networks:
     - net
    logging:
      driver: json-file
    deploy:
      # placement:
      #   constraints:
      #     - node.labels.name==db
      resources:
        reservations:
          cpus: '0.1'
          memory: 128M
        limits:
          cpus: '0.6'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 2s
        max_attempts: 5
        window: 120s

networks:
  net:
    driver: overlay

volumes:
  db-data:
    driver: local
  influx-data:
    driver: local
